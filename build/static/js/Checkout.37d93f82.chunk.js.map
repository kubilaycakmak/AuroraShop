{"version":3,"sources":["styles/Checkout.module.css","components/Checkout.js"],"names":["module","exports","Payment","lazy","Checkout","useContext","StoreContext","cartctx","total","checkoutsort","order","filteredcheck","useHistory","orders","carts","TotalCartPrice","className","styling","CheckoutList","map","check","CheckoutBox","CheckoutRow","src","image","loading","alt","title","count","price","Math","floor","random","checkoutInfo"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,+BAA+B,YAAc,8BAA8B,YAAc,8BAA8B,aAAe,iC,gGCGvMC,EAAUC,gBAAK,kBAAM,sDA6CZC,UA5CE,WACf,MAAgDC,qBAC9CC,KADMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,MAIhCC,GADUC,cACQH,EAAlBE,eACN,cAA4BD,EAA5B,GAAOG,EAAP,KACA,GADA,KACA,YAA0BN,EAA1B,IAAOO,EAAP,KACMC,GADN,KACyBP,EAAnBO,gBAEN,MACW,IAATD,GACE,sBAAKE,UAAWC,IAAQb,SAAxB,UACE,sBAAKY,UAAWC,IAAQC,aAAxB,UACE,kDACCP,EAAcQ,KAAI,SAACC,GAAD,OACjB,qBAEEJ,UAAWC,IAAQI,YAFrB,SAIE,sBAAKL,UAAWC,IAAQK,YAAxB,UACE,qBAAKC,IAAKH,EAAMI,MAAOC,QAAQ,OAAOC,IAAI,qBAC1C,6BAAKN,EAAMO,QACX,wCAAMP,EAAMQ,MAAQR,EAAMS,aANvBC,KAAKC,MAAsB,IAAhBD,KAAKE,iBAWhB,IAAVnB,EACC,GAEA,gCACE,sDAAoBE,KAAqB,IACzC,qBAAIC,UAAWC,IAAQgB,aAAvB,sBACW,4CADX,OACsC,mDAChC,IACN,cAAC/B,EAAD","file":"static/js/Checkout.37d93f82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__3TOWT\",\"CheckoutList\":\"Checkout_CheckoutList__566-H\",\"CheckoutBox\":\"Checkout_CheckoutBox__1ykix\",\"CheckoutRow\":\"Checkout_CheckoutRow__2aahd\",\"checkoutInfo\":\"Checkout_checkoutInfo__1_Sbe\"};","import { useContext,lazy } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styling from \"../styles/Checkout.module.css\";\r\nimport { StoreContext } from \"../Context/StoreContext\";\r\nconst Payment = lazy(() => import(\"./Payment\"));\r\nconst Checkout = () => {\r\n  const { cartctx, total, checkoutsort, order } = useContext(\r\n    StoreContext\r\n  );\r\n  const history = useHistory();\r\n  let { filteredcheck } = checkoutsort;\r\n  const [orders, setOrders] = order;\r\n  const [carts, setCarts] = cartctx;\r\n  let { TotalCartPrice } = total;\r\n\r\n  return (\r\n    carts != \"\" && (\r\n      <div className={styling.Checkout}>\r\n        <div className={styling.CheckoutList}>\r\n          <h1>List of Products</h1>\r\n          {filteredcheck.map((check) => (\r\n            <div\r\n              key={Math.floor(Math.random() * 100000)}\r\n              className={styling.CheckoutBox}\r\n            >\r\n              <div className={styling.CheckoutRow}>\r\n                <img src={check.image} loading=\"lazy\" alt=\"checkout product\" />\r\n                <h4>{check.title}</h4>\r\n                <h4>€{check.count * check.price}</h4>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {orders == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <div>\r\n            <h1>Total Price : €{TotalCartPrice}</h1>{\" \"}\r\n            <h4 className={styling.checkoutInfo}>\r\n              Pay with <strong>Paypal</strong> or <strong>Debit Card</strong>\r\n            </h4>{\" \"}\r\n            <Payment />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  );\r\n};\r\nexport default Checkout;\r\n"],"sourceRoot":""}