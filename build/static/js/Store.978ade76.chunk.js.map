{"version":3,"sources":["components/ToastNotification.js","styles/Store.module.css","styles/FlexProduct.module.css","styles/FlexRow.module.css","UI/FlexProduct.js","UI/FlexRow.js","components/Store.js"],"names":["toastNotification","value","text","toast","success","title","module","exports","FlexProduct","props","className","styling","FlexImage","FlexLabel","src","image","loading","alt","FlexProduct__row","price","Button","bgColor","ariaLabel","textColor","padding","radius","fontSize","onClick","addToCart","FlexRow","memo","children","Store","useContext","StoreContext","productctx","cartctx","products","carts","setCarts","map","product","e","id","count","addCount","addQty"],"mappings":"qHAAA,mDAEaA,EAAmB,SAACC,EAAMC,GACnCC,IAAMC,QAAN,iBAAiBH,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOI,MAAxB,YAAiCH,M,mBCFrCI,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,UAAY,+BAA+B,UAAY,iC,mBCA9OD,EAAOC,QAAU,CAAC,QAAU,2B,kICuBbC,EAnBK,SAACC,GACnB,OACE,sBAAKC,UAAWC,IAAQH,YAAxB,UACE,sBAAKE,UAAWC,IAAQC,UAAxB,UACE,qBAAKF,UAAWC,IAAQE,YAExB,qBAAKC,IAAKL,EAAMM,MAAOC,QAAQ,OAAOC,IAAI,eAE5C,6BAAKR,EAAMJ,QACX,sBAAKK,UAAWC,IAAQO,iBAAxB,UACE,6CAAWT,EAAMU,SACjB,eAACC,EAAA,EAAD,CAAQC,QAAQ,cAAcC,UAAU,UAAWC,UAAU,OAAOC,QAAQ,aAAaC,OAAO,MAAMC,SAAS,OAAOC,QAASlB,EAAMmB,UAArI,UACE,cAAC,IAAD,IAAe,c,iBCXVC,EAJCC,gBAAK,SAACrB,GACpB,OAAO,yBAASC,UAAWC,IAAQkB,QAA5B,SAAsCpB,EAAMsB,c,QCI/CC,EAAQF,gBAAK,WACjB,MAAgCG,qBAAWC,KAAnCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QACbC,EAAP,YAAmBF,EAAnB,MAEA,cAA0BC,EAA1B,GAAOE,EAAP,KAAcC,EAAd,KAmBA,OACE,qBAAK7B,UAAWC,IAAQqB,MAAxB,SAEE,cAAC,EAAD,UACGK,EAASG,KAAI,SAACC,GAGb,OACE,cAAC,EAAD,CAGEpC,MAAOoC,EAAQpC,MACfU,MAAO0B,EAAQ1B,MACfI,MAAOsB,EAAQtB,MACfS,UAAW,SAACc,GAAD,OA/BN,SAACD,GAClBF,EAAS,GAAD,mBACHD,GADG,CAGN,CACEK,GAAIF,EAAQE,GACZtC,MAAOoC,EAAQpC,MACfU,MAAO0B,EAAQ1B,MACfI,MAAOsB,EAAQtB,MACfyB,MAAOH,EAAQG,MACfC,SAAUJ,EAAQK,WAGtB9C,YAAkByC,EAAS,6BAkBGb,CAAUa,KAJvBA,EAAQE,cAcZX","file":"static/js/Store.978ade76.chunk.js","sourcesContent":["import { memo } from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nexport const toastNotification =(value,text) => {\r\n    toast.success(`${value?.title} ${text}`)\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Store\":\"Store_Store__jItPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexProduct\":\"FlexProduct_FlexProduct__3qeH8\",\"FlexProduct__row\":\"FlexProduct_FlexProduct__row__34Jfc\",\"FlexProduct__label\":\"FlexProduct_FlexProduct__label__30YTi\",\"FlexImage\":\"FlexProduct_FlexImage__2gx6K\",\"FlexLabel\":\"FlexProduct_FlexLabel__20xMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexRow\":\"FlexRow_FlexRow__3J4UI\"};","import styling from \"../styles/FlexProduct.module.css\";\r\nimport  {memo} from \"react\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\nimport Button from './Button'\r\n\r\nconst FlexProduct = (props) => {\r\n  return (\r\n    <div className={styling.FlexProduct}>\r\n      <div className={styling.FlexImage}>\r\n        <div className={styling.FlexLabel}>\r\n        </div>\r\n        <img src={props.image} loading=\"lazy\" alt=\"Product\" />\r\n      </div>\r\n      <h1>{props.title}</h1>\r\n      <div className={styling.FlexProduct__row}>\r\n        <h2>From â‚¬{props.price}</h2>\r\n        <Button bgColor=\"var(--blue)\" ariaLabel=\"Product\"  textColor=\"#fff\" padding=\"10px 15px \" radius=\"5px\" fontSize=\"15px\" onClick={props.addToCart}>\r\n          <FaCartPlus />{\" \"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlexProduct;\r\n","import styling from \"../styles/FlexRow.module.css\";\r\nimport {memo} from 'react';\r\nconst FlexRow = memo((props) => {\r\n  return <section className={styling.FlexRow}>{props.children}</section>;\r\n});\r\n\r\nexport default FlexRow;\r\n","import {useContext , memo} from \"react\";\r\nimport { StoreContext } from \"../Context/StoreContext\";\r\nimport styling from \"../styles/Store.module.css\";\r\nimport  FlexProduct from  \"../UI/FlexProduct.js\";\r\nimport  FlexRow from \"../UI/FlexRow.js\";\r\nimport {toastNotification}  from \"./ToastNotification\";\r\n\r\nconst Store = memo(() => {\r\n  const { productctx, cartctx } = useContext(StoreContext);\r\n  const [products] = productctx;\r\n\r\n  const [carts, setCarts] = cartctx;\r\n\r\nconst  addToCart = (product) => {\r\n  setCarts([\r\n    ...carts,\r\n\r\n    {\r\n      id: product.id,\r\n      title: product.title,\r\n      image: product.image,\r\n      price: product.price,\r\n      count: product.count,\r\n      addCount: product.addQty\r\n    }\r\n  ]);\r\n  toastNotification(product ,'Product added to the cart');\r\n\r\n}\r\n\r\n  return (\r\n    <div className={styling.Store}>\r\n\r\n      <FlexRow>\r\n        {products.map((product) => {\r\n\r\n\r\n          return (\r\n            <FlexProduct\r\n \r\n              key={product.id}\r\n              title={product.title}\r\n              image={product.image}\r\n              price={product.price}\r\n              addToCart={(e) => addToCart(product)}\r\n            />\r\n          );\r\n        })}\r\n      </FlexRow>\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Store;\r\n"],"sourceRoot":""}